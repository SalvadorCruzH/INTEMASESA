<?xml version="1.0"?>

<workflow-definition
	xmlns="urn:liferay.com:liferay-workflow_7.4.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:liferay.com:liferay-workflow_7.4.0 http://www.liferay.com/dtd/liferay-workflow-definition_7_4_0.xsd"
>
	<name>87ca54ba-9b30-1ea0-6b34-71ff5d0364d3</name>
	<version>40</version>
	<condition>
		<name>d292d2f5-9289-46fb-a8b6-16e2a568636e</name>
		<description>Ejecute una lógica condicional.</description>
		<metadata><![CDATA[{"xy":[280,180],"transitions":{"existen vacaciones":{"bendpoints":[]}}}]]></metadata>
		<actions>
			<action>
				<name>Cambiar estado workflow</name>
				<description></description>
				<status>1</status>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
		</actions>
		<labels>
			<label language-id="es_ES">
				Validacion Vacaciones planificadas o Solicitadas
			</label>
		</labels>
		<script>
			<![CDATA[import es.emasesa.intranet.service.util.SapServicesUtil;
import es.emasesa.intranet.base.util.LoggerUtil;

import org.osgi.framework.Bundle;
import org.osgi.framework.FrameworkUtil;
import org.osgi.util.tracker.ServiceTracker;

import com.liferay.portal.kernel.json.JSONArray;
import com.liferay.portal.kernel.json.JSONException;
import com.liferay.portal.kernel.json.JSONFactoryUtil;
import com.liferay.portal.kernel.json.JSONObject;
import com.liferay.portal.kernel.service.UserLocalServiceUtil
import com.liferay.object.service.ObjectEntryLocalServiceUtil;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;

Log log = LogFactoryUtil.getLog("es.emasesa.groovy.anticipoVacaciones")
Bundle bundle = FrameworkUtil.getBundle(SapServicesUtil.class)
ServiceTracker customSapServiceUtilTracker = new ServiceTracker(bundle.getBundleContext(), SapServicesUtil.class, null)
def userScreenName = "", matricula = ""

try {
    def user = UserLocalServiceUtil.getUserById(userId)
    def expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(user.getCompanyId(), user.getModelClassName(), userId)
    matricula = expandoBridge.getAttribute("matricula")
    LoggerUtil.debug(log, "matricula: " + matricula)
} catch (Exception e) {
    LoggerUtil.error(log, "No se ha encontrado usuario con matricula: " + matricula)
}
returnValue = "existen vacaciones"
def fechaComienzoVacaciones = ObjectEntryLocalServiceUtil.getObjectEntry(entryClassPK.toLong()).getValues().get("fechaComienzoVacaciones")

customSapServiceUtilTracker.open()
SapServicesUtil customSapServiceUtil = customSapServiceUtilTracker.getService()
JSONArray jsonArray = customSapServiceUtil.getempleadoPrestamos(matricula, fechaComienzoVacaciones)
customSapServiceUtilTracker.close()

LoggerUtil.debug(log, "Resultado de la llamada: " + jsonArray.toString())
if (jsonArray.length() > 0){
    def fechaFin = jsonArray.getJSONObject(0).get("ffinVacaciones")
    def fechaInicio = jsonArray.getJSONObject(0).get("finiVacaciones")

    returnValue = "existen vacaciones"

    if (fechaFin.equals("0000-00-00") && fechaInicio.equals("0000-00-00")){
        LoggerUtil.debug(log, "La llamada ha devuelto fechas no validas")
       returnValue = "no existen vacaciones"
        return
    }
} else {
    LoggerUtil.error(log, "La llamada no ha devuelto ningun dato")
}
]]>
		</script>
		<script-language>groovy</script-language>
		<transitions>
			<transition>
				<labels>
					<label language-id="es_ES">
						No Existe
					</label>
				</labels>
				<name>no existen vacaciones</name>
				<target>denegado-inexistencia-vacaciones</target>
				<default>false</default>
			</transition>
			<transition>
				<labels>
					<label language-id="es_ES">
						Existe
					</label>
				</labels>
				<name>existen vacaciones</name>
				<target>1bc97986-ba14-46fd-8690-509815aaee4c</target>
				<default>true</default>
			</transition>
		</transitions>
	</condition>
	<condition>
		<name>1bc97986-ba14-46fd-8690-509815aaee4c</name>
		<description>Ejecute una lógica condicional.</description>
		<metadata><![CDATA[{"xy":[612,174],"transitions":{"existe otro anticipo":{"bendpoints":[]}}}]]></metadata>
		<labels>
			<label language-id="es_ES">
				Validacion otro anticipo en curso
			</label>
		</labels>
		<script>
			<![CDATA[import org.osgi.framework.Bundle;
import org.osgi.framework.FrameworkUtil;
import org.osgi.util.tracker.ServiceTracker;
import es.emasesa.intranet.base.util.CustomWorkflowBaseUtil;

returnValue = "no existe otro anticipo"

Bundle bundle = FrameworkUtil.getBundle(CustomWorkflowBaseUtil.class);
ServiceTracker customWorkflowUtilTracker = new ServiceTracker(bundle.getBundleContext(),CustomWorkflowBaseUtil.class, null);

customWorkflowUtilTracker.open();
CustomWorkflowBaseUtil customWorkflowUtil = customWorkflowUtilTracker.getService();

def existsOther = customWorkflowUtil.isAnotherUnfinishedUserObject(entryClassPK.toLong(),userId.toLong());
customWorkflowUtilTracker.close();

if (existsOther) returnValue = "existe otro anticipo"]]>
		</script>
		<script-language>groovy</script-language>
		<transitions>
			<transition>
				<labels>
					<label language-id="es_ES">
						No Existe
					</label>
				</labels>
				<name>no existe otro anticipo</name>
				<target>envio-rrhh</target>
				<default>true</default>
			</transition>
			<transition>
				<labels>
					<label language-id="es_ES">
						Existe
					</label>
				</labels>
				<name>existe otro anticipo</name>
				<target>a42319c9-1c1c-40ab-b690-e857c126e66b</target>
				<default>false</default>
			</transition>
		</transitions>
	</condition>
	<state>
		<name>773483cc-a7ad-4a49-b6a9-a0872315d24d</name>
		<description>Inicia un flujo de trabajo.</description>
		<metadata><![CDATA[{"xy":[-120,177],"transitions":{"8fa810bf-c22c-4893-9edc-9ee5e659a586":{"bendpoints":[]}}}]]></metadata>
		<actions>
			<action>
				<name>Cambiar estado objeto</name>
				<description></description>
				<script>
					<![CDATA[import com.liferay.portal.template.*;
import com.liferay.portal.util.*;
import org.osgi.framework.Bundle;
import org.osgi.framework.FrameworkUtil;
import org.osgi.util.tracker.ServiceTracker;
import es.emasesa.intranet.base.util.CustomWorkflowBaseUtil;

Bundle bundle = FrameworkUtil.getBundle(CustomWorkflowBaseUtil.class);
ServiceTracker customWorkflowUtilTracker = new ServiceTracker(bundle.getBundleContext(),CustomWorkflowBaseUtil.class, null);

customWorkflowUtilTracker.open();
CustomWorkflowBaseUtil customWorkflowUtil = customWorkflowUtilTracker.getService();

customWorkflowUtil.updateObjectHistoryAndStatus(workflowContext, "enviada", userId, "");
customWorkflowUtilTracker.close();]]>
				</script>
				<script-language>groovy</script-language>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
		</actions>
		<initial>true</initial>
		<labels>
			<label language-id="es_ES">
				Creacion Solicitud Anticipo de Vacaciones
			</label>
		</labels>
		<transitions>
			<transition>
				<labels>
					<label language-id="es_ES">
						Envio Solicitud
					</label>
				</labels>
				<name>8fa810bf-c22c-4893-9edc-9ee5e659a586</name>
				<target>d292d2f5-9289-46fb-a8b6-16e2a568636e</target>
				<default>true</default>
			</transition>
		</transitions>
	</state>
	<state>
		<name>daa0f5db-6aaa-49b1-bb5f-4415c1c045a1</name>
		<description>Finaliza el flujo de trabajo.</description>
		<metadata>
			<![CDATA[
				{
					"xy": [
						1327.940743427138,
						167.7434714410359
					],
					"terminal": true
				}
			]]>
		</metadata>
		<actions>
			<action>
				<name>Aprobacion y Guardado en GISD</name>
				<description></description>
				<script>
					<![CDATA[import com.liferay.portal.template.*;
import com.liferay.portal.util.*;
import org.osgi.framework.Bundle;
import org.osgi.framework.FrameworkUtil;
import org.osgi.util.tracker.ServiceTracker;
import es.emasesa.intranet.base.util.CustomWorkflowBaseUtil;
import es.emasesa.intranet.sigd.service.application.SigdServiceApplication;

Bundle bundleWorkflow = FrameworkUtil.getBundle(CustomWorkflowBaseUtil.class);
ServiceTracker customWorkflowUtilTracker = new ServiceTracker(bundleWorkflow.getBundleContext(),CustomWorkflowBaseUtil.class, null);
customWorkflowUtilTracker.open();
CustomWorkflowBaseUtil customWorkflowUtil = customWorkflowUtilTracker.getService();

Bundle bundleSigd = FrameworkUtil.getBundle(SigdServiceApplication.class);
ServiceTracker sigdServiceTracker = new ServiceTracker(bundleSigd.getBundleContext(),SigdServiceApplication.class, null);
sigdServiceTracker.open();
SigdServiceApplication sigdService = sigdServiceTracker.getService();

customWorkflowUtil.updateObjectHistoryAndStatus(workflowContext, "aceptada", userId, "Admin RRHH");
String pdf = customWorkflowUtil.pdfBase64(customWorkflowUtil.createPDF(workflowContext));

if(pdf != null && pdf != ""){
    String idDocumentoSigd = sigdService.saveDocumentOnSIGD(workflowContext, pdf, "AnticiposVacaciones", "solicitud", userId, false);
}
customWorkflowUtilTracker.close();
sigdServiceTracker.close();]]>
				</script>
				<script-language>groovy</script-language>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
			<action>
				<name>Cambiar estado workflow</name>
				<description></description>
				<status>0</status>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
			<notification>
				<name>Se ha finalizado la solicitud</name>
				<description>
					<![CDATA[]]>
				</description>
				<template>
					<![CDATA[Su solicitud de Anticipo de Vacaciones ha sido aprobada.]]>
				</template>
				<template-language>text</template-language>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<user />
				</recipients>
				<execution-type>onEntry</execution-type>
			</notification>
		</actions>
		<labels>
			<label language-id="es_ES">
				Aprobación de la Solicitud
			</label>
		</labels>
	</state>
	<state>
		<name>denegado-inexistencia-vacaciones</name>
		<description>Finaliza el flujo de trabajo.</description>
		<metadata>
			<![CDATA[
				{
					"xy": [
						274.1815115802391,
						39.439226257942686
					],
					"terminal": true
				}
			]]>
		</metadata>
		<actions>
			<action>
				<name>Cambiar estado workflow</name>
				<description></description>
				<status>4</status>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
			<action>
				<name>Cambiar estado objeto</name>
				<description></description>
				<script>
					<![CDATA[import com.liferay.portal.template.*;
import com.liferay.portal.util.*;
import org.osgi.framework.Bundle;
import org.osgi.framework.FrameworkUtil;
import org.osgi.util.tracker.ServiceTracker;
import es.emasesa.intranet.base.util.CustomWorkflowBaseUtil;
import es.emasesa.intranet.sigd.service.application.SigdServiceApplication;

Bundle bundleWorkflow = FrameworkUtil.getBundle(CustomWorkflowBaseUtil.class);
ServiceTracker customWorkflowUtilTracker = new ServiceTracker(bundleWorkflow.getBundleContext(),CustomWorkflowBaseUtil.class, null);
customWorkflowUtilTracker.open();
CustomWorkflowBaseUtil customWorkflowUtil = customWorkflowUtilTracker.getService();

Bundle bundleSigd = FrameworkUtil.getBundle(SigdServiceApplication.class);
ServiceTracker sigdServiceTracker = new ServiceTracker(bundleSigd.getBundleContext(),SigdServiceApplication.class, null);
sigdServiceTracker.open();
SigdServiceApplication sigdService = sigdServiceTracker.getService();

//Modificar historico y estado
customWorkflowUtil.updateObjectHistoryAndStatus(workflowContext, "rechazada", userId, "");

//Subir el object en PDF
String pdf = customWorkflowUtil.pdfBase64(customWorkflowUtil.createPDF(workflowContext));
if(pdf != null && pdf != ""){
	String idDocumentoSigd = sigdService.saveDocumentOnSIGD(workflowContext, pdf, "AnticiposVacaciones", "solicitud", userId, false);
}

customWorkflowUtilTracker.close();
sigdServiceTracker.close();
]]>
				</script>
				<script-language>groovy</script-language>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
			<notification>
				<name>Notificación solicitud denegada</name>
				<description>
					<![CDATA[]]>
				</description>
				<template>
					<![CDATA[Su Solicitud de Anticipo de Vacaciones ha sido denegada por no existir vacaciones planificadas para la fecha indicada.]]>
				</template>
				<template-language>freemarker</template-language>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<user />
				</recipients>
				<execution-type>onEntry</execution-type>
			</notification>
		</actions>
		<labels>
			<label language-id="es_ES">
				Muestra aviso y acaba
			</label>
		</labels>
	</state>
	<state>
		<name>denegado-anticipo-existente</name>
		<description>Finaliza el flujo de trabajo.</description>
		<metadata>
			<![CDATA[
				{
					"xy": [
						618.721435546875,
						439.6461181640625
					],
					"terminal": true
				}
			]]>
		</metadata>
		<actions>
			<action>
				<name>Cambiar estado workflow</name>
				<description></description>
				<status>4</status>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
			<action>
				<name>Cambiar estado objeto</name>
				<description></description>
				<script>
					<![CDATA[import com.liferay.portal.template.*;
import com.liferay.portal.util.*;
import org.osgi.framework.Bundle;
import org.osgi.framework.FrameworkUtil;
import org.osgi.util.tracker.ServiceTracker;
import es.emasesa.intranet.base.util.CustomWorkflowBaseUtil;
import es.emasesa.intranet.sigd.service.application.SigdServiceApplication;

Bundle bundleWorkflow = FrameworkUtil.getBundle(CustomWorkflowBaseUtil.class);
ServiceTracker customWorkflowUtilTracker = new ServiceTracker(bundleWorkflow.getBundleContext(),CustomWorkflowBaseUtil.class, null);
customWorkflowUtilTracker.open();
CustomWorkflowBaseUtil customWorkflowUtil = customWorkflowUtilTracker.getService();

Bundle bundleSigd = FrameworkUtil.getBundle(SigdServiceApplication.class);
ServiceTracker sigdServiceTracker = new ServiceTracker(bundleSigd.getBundleContext(),SigdServiceApplication.class, null);
sigdServiceTracker.open();
SigdServiceApplication sigdService = sigdServiceTracker.getService();

//Modificar historico y estado
customWorkflowUtil.updateObjectHistoryAndStatus(workflowContext, "rechazada", userId, "");

//Subir el object en PDF
String pdf = customWorkflowUtil.pdfBase64(customWorkflowUtil.createPDF(workflowContext));
if(pdf != null && pdf != ""){
	String idDocumentoSigd = sigdService.saveDocumentOnSIGD(workflowContext, pdf, "AnticiposVacaciones", "solicitud", userId, false);
}

customWorkflowUtilTracker.close();
sigdServiceTracker.close();
]]>
				</script>
				<script-language>groovy</script-language>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
			<notification>
				<name>Notificacion al usuario</name>
				<description>
					<![CDATA[]]>
				</description>
				<template>
					<![CDATA[Se ha detectado una solicitud de Anticipo de Vacaciones anterior por lo que se ha procedido a avisar al departamento de Recursos Humanos para su resolución y se ha procedido a la denegación de esta solicitud.]]>
				</template>
				<template-language>text</template-language>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<user />
				</recipients>
				<execution-type>onEntry</execution-type>
			</notification>
		</actions>
		<labels>
			<label language-id="es_ES">
				Notifica al usuario
			</label>
		</labels>
	</state>
	<state>
		<name>31273493-1643-423e-aa68-41cefa20eadd</name>
		<description>Finaliza el flujo de trabajo.</description>
		<metadata>
			<![CDATA[
				{
					"xy": [
						972.5597833887703,
						300.19889188078474
					],
					"terminal": true
				}
			]]>
		</metadata>
		<actions>
			<action>
				<name>Cambiar estado workflow</name>
				<description></description>
				<status>4</status>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
			<action>
				<name>Cambiar estado objeto</name>
				<description></description>
				<script>
					<![CDATA[import com.liferay.portal.template.*;
import com.liferay.portal.util.*;
import org.osgi.framework.Bundle;
import org.osgi.framework.FrameworkUtil;
import org.osgi.util.tracker.ServiceTracker;
import es.emasesa.intranet.base.util.CustomWorkflowBaseUtil;
import es.emasesa.intranet.sigd.service.application.SigdServiceApplication;

Bundle bundleWorkflow = FrameworkUtil.getBundle(CustomWorkflowBaseUtil.class);
ServiceTracker customWorkflowUtilTracker = new ServiceTracker(bundleWorkflow.getBundleContext(),CustomWorkflowBaseUtil.class, null);
customWorkflowUtilTracker.open();
CustomWorkflowBaseUtil customWorkflowUtil = customWorkflowUtilTracker.getService();

Bundle bundleSigd = FrameworkUtil.getBundle(SigdServiceApplication.class);
ServiceTracker sigdServiceTracker = new ServiceTracker(bundleSigd.getBundleContext(),SigdServiceApplication.class, null);
sigdServiceTracker.open();
SigdServiceApplication sigdService = sigdServiceTracker.getService();

//Modificar historico y estado
customWorkflowUtil.updateObjectHistoryAndStatus(workflowContext, "rechazada", userId, "Admin RRHH");

//Subir el object en PDF
String pdf = customWorkflowUtil.pdfBase64(customWorkflowUtil.createPDF(workflowContext));
if(pdf != null && pdf != ""){
	String idDocumentoSigd = sigdService.saveDocumentOnSIGD(workflowContext, pdf, "AnticiposVacaciones", "solicitud", userId, false);
}

customWorkflowUtilTracker.close();
sigdServiceTracker.close();
]]>
				</script>
				<script-language>groovy</script-language>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
			<notification>
				<name>Notificación solicitud rechazada</name>
				<description>
					<![CDATA[]]>
				</description>
				<template>
					<![CDATA[Su Solicitud de Anticipo de Vacaciones ha sido rechazada por el departamento de Recursos Humanos]]>
				</template>
				<template-language>text</template-language>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<user />
				</recipients>
				<execution-type>onEntry</execution-type>
			</notification>
		</actions>
		<labels>
			<label language-id="es_ES">
				Muestra aviso y acaba
			</label>
		</labels>
	</state>
	<task>
		<name>envio-rrhh</name>
		<description>Pida a un usuario que trabaje en el elemento.</description>
		<metadata><![CDATA[{"xy":[970,168],"transitions":{"d1d05cc0-b359-4bfd-9325-02d9e870f9e5":{"bendpoints":[]}}}]]></metadata>
		<actions>
			<action>
				<name>Cambiar estado objeto</name>
				<description></description>
				<script>
					<![CDATA[import com.liferay.portal.template.*;
import com.liferay.portal.util.*;
import org.osgi.framework.Bundle;
import org.osgi.framework.FrameworkUtil;
import org.osgi.util.tracker.ServiceTracker;
import es.emasesa.intranet.base.util.CustomWorkflowBaseUtil;

Bundle bundle = FrameworkUtil.getBundle(CustomWorkflowBaseUtil.class);
ServiceTracker customWorkflowUtilTracker = new ServiceTracker(bundle.getBundleContext(),CustomWorkflowBaseUtil.class, null);

customWorkflowUtilTracker.open();
CustomWorkflowBaseUtil customWorkflowUtil = customWorkflowUtilTracker.getService();
customWorkflowUtil.updateObjectHistoryAndStatus(workflowContext, "pendienteRRHH", userId, "Admin RRHH");
customWorkflowUtilTracker.close();]]>
				</script>
				<script-language>groovy</script-language>
				<priority>1</priority>
				<execution-type>onAssignment</execution-type>
			</action>
			<notification>
				<name>Aviso a RRHH</name>
				<description>
					<![CDATA[]]>
				</description>
				<template>
					<![CDATA[Se le ha asignado una solicitud de Anticipo de Vacaciones]]>
				</template>
				<template-language>text</template-language>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<roles>
						<role>
							<role-id>35183</role-id>
						</role>
					</roles>
				</recipients>
				<execution-type>onEntry</execution-type>
			</notification>
		</actions>
		<assignments>
			<roles>
				<role>
					<role-id>35183</role-id>
				</role>
			</roles>
		</assignments>
		<labels>
			<label language-id="es_ES">
				Envio a RRHH (Nominas)
			</label>
		</labels>
		<transitions>
			<transition>
				<labels>
					<label language-id="es_ES">
						Aprobada
					</label>
				</labels>
				<name>fec2de4a-d4a1-4ab9-bc46-2e5c6b0f73da</name>
				<target>daa0f5db-6aaa-49b1-bb5f-4415c1c045a1</target>
				<default>true</default>
			</transition>
			<transition>
				<labels>
					<label language-id="es_ES">
						No Aprobada
					</label>
				</labels>
				<name>d1d05cc0-b359-4bfd-9325-02d9e870f9e5</name>
				<target>31273493-1643-423e-aa68-41cefa20eadd</target>
				<default>false</default>
			</transition>
		</transitions>
	</task>
	<task>
		<name>a42319c9-1c1c-40ab-b690-e857c126e66b</name>
		<description>Pida a un usuario que trabaje en el elemento.</description>
		<metadata><![CDATA[{"xy":[619,300],"transitions":{"finalizar-flujo-aviso-rrhh":{"bendpoints":[]}}}]]></metadata>
		<actions>
			<action>
				<name>Completar tarea</name>
				<description></description>
				<script>
					<![CDATA[import com.liferay.portal.kernel.workflow.WorkflowTaskManagerUtil
import com.liferay.portal.kernel.service.ServiceContext
import com.liferay.portal.kernel.service.ServiceContextThreadLocal

try {
    boolean completed = WorkflowTaskManagerUtil.completeWorkflowTask(workflowContext.get("companyId").toLong(),workflowContext.get("userId").toLong(), kaleoTaskInstanceToken.getKaleoTaskInstanceTokenId(), "finalizar-flujo-aviso-rrhh", "", workflowContext)
} catch (Exception e) {
    println "Failed to complete workflow task: " + e.getMessage()
}]]>
				</script>
				<script-language>groovy</script-language>
				<priority>1</priority>
				<execution-type>onEntry</execution-type>
			</action>
			<notification>
				<name>Notificacion a RRHH</name>
				<description>
					<![CDATA[]]>
				</description>
				<template>
					<![CDATA[<#assign UserLocalService = serviceLocator.findService("com.liferay.portal.kernel.service.UserLocalService")>
<#assign expandoAPI = staticUtil["com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil"]>
<#assign user = UserLocalService.getUserById(userId)>
<#assign expandoBridge = expandoAPI.getExpandoBridge(user.getCompanyId(), user.getModelClassName(), userId)>
<#assign nombre = expandoBridge.getAttribute("nombre")>
<#assign primerApellido = expandoBridge.getAttribute("apellido1")>
<#assign segundoApellido = expandoBridge.getAttribute("apellido2")>

El empleado ${nombre} ${primerApellido} ${segundoApellido} con PERNR ${ user.getScreenName() } ha registrado una nueva Solicitud de Anticipo de Vacaciones pero se ha denegado al existir otra petición en curso.]]>
				</template>
				<template-language>freemarker</template-language>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<roles>
						<role>
							<role-id>35183</role-id>
						</role>
					</roles>
				</recipients>
				<execution-type>onEntry</execution-type>
			</notification>
		</actions>
		<assignments>
			<user />
		</assignments>
		<labels>
			<label language-id="es_ES">
				Tarea
			</label>
		</labels>
		<transitions>
			<transition>
				<labels>
					<label language-id="es_ES">
						Finaliza el Flujo
					</label>
				</labels>
				<name>finalizar-flujo-aviso-rrhh</name>
				<target>denegado-anticipo-existente</target>
				<default>true</default>
			</transition>
		</transitions>
	</task>
</workflow-definition>