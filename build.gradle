// Check GETTING_STARTED.markdown for information regarding usage.

buildscript {
	repositories {
		maven {url "https://repository-cdn.liferay.com/nexus/content/groups/public"}
	}

	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:4.3.1.3277"
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.source.formatter", version: "5.2.71"
	}
}

plugins {
	id 'distribution'
}
sourceCompatibility = 11
targetCompatibility = 11

subprojects { subproject ->
	apply plugin: "io.spring.dependency-management"
	plugins.withId("java") {
		sourceCompatibility = "11"
	}

	buildscript {
		repositories {
			maven {
				url "https://repository-cdn.liferay.com/nexus/content/groups/public"
			}
		}
	}

	repositories {
		maven {
			url "https://repository-cdn.liferay.com/nexus/content/groups/public"
		}
	}

	dependencyManagement {
		dependencies {
			dependency "com.liferay.portal:release.dxp.api:7.4.13.u92"
			dependency "javax.mail:mail:1.4.7"
		}
	}
}

apply plugin: "com.liferay.node"
apply plugin: "com.liferay.source.formatter"

node {
	nodeVersion = "16.15.1"
}

apply plugin: "org.sonarqube"


def env = System.getenv("enviroment")

distributions {
	main {
		distributionBaseName = 'portalempleado'
		contents {
			//Copiamos los despliegues
			into('deploy/') {
				from 'bundles/deploy'
			}
			into('osgi/modules') {
				from 'bundles/osgi/modules'
			}
			//Copiamos las configuraciones comunes y propias del entorno
			into('osgi/configs') {
				from 'configs/common/osgi/configs'
			}
			into('osgi/configs') {
				from 'configs/'+env+'/osgi/configs'
			}
			//Copiamos las propiedades
			into('.') {
				from 'configs/common/portal-setup-wizard.properties'
			}
			into('.') {
				from 'configs/'+env+'/portal-emasesa.properties'
			}
			//Copiamos la licencia al deploy
			into('deploy/') {
				from 'configs/'+env+'/license/'
			}
			//Copiamos la licencia al deploy
			into('patching/') {
				from 'configs/common/patching/'
			}
			into('tomcat/webapps/ROOT/WEB-INF/shielded-container-lib') {
				from 'shielded-lib'
			}
		}

	}
}