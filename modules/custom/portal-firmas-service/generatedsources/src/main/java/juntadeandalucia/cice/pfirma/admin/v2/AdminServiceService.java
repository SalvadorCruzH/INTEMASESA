
package juntadeandalucia.cice.pfirma.admin.v2;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "AdminServiceService", targetNamespace = "urn:juntadeandalucia:cice:pfirma:admin:v2.0", wsdlLocation = "META-INF/wsdl/AdminService.wsdl")
public class AdminServiceService
    extends Service
{

    private final static URL ADMINSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException ADMINSERVICESERVICE_EXCEPTION;
    private final static QName ADMINSERVICESERVICE_QNAME = new QName("urn:juntadeandalucia:cice:pfirma:admin:v2.0", "AdminServiceService");

    static {
        ADMINSERVICESERVICE_WSDL_LOCATION = juntadeandalucia.cice.pfirma.admin.v2.AdminServiceService.class.getClassLoader().getResource("META-INF/wsdl/AdminService.wsdl");
        WebServiceException e = null;
        if (ADMINSERVICESERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'META-INF/wsdl/AdminService.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        ADMINSERVICESERVICE_EXCEPTION = e;
    }

    public AdminServiceService() {
        super(__getWsdlLocation(), ADMINSERVICESERVICE_QNAME);
    }

    public AdminServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ADMINSERVICESERVICE_QNAME, features);
    }

    public AdminServiceService(URL wsdlLocation) {
        super(wsdlLocation, ADMINSERVICESERVICE_QNAME);
    }

    public AdminServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ADMINSERVICESERVICE_QNAME, features);
    }

    public AdminServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AdminServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AdminService
     */
    @WebEndpoint(name = "AdminServicePort")
    public AdminService getAdminServicePort() {
        return super.getPort(new QName("urn:juntadeandalucia:cice:pfirma:admin:v2.0", "AdminServicePort"), AdminService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdminService
     */
    @WebEndpoint(name = "AdminServicePort")
    public AdminService getAdminServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:juntadeandalucia:cice:pfirma:admin:v2.0", "AdminServicePort"), AdminService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ADMINSERVICESERVICE_EXCEPTION!= null) {
            throw ADMINSERVICESERVICE_EXCEPTION;
        }
        return ADMINSERVICESERVICE_WSDL_LOCATION;
    }

}
